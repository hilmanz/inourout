<?php include_once "db.php";class dashboardbot extends db{	function __construct(){		global 	$CONFIG;		$this->config = $CONFIG;  		/* $this->datestart = date("Y-m-d", strtotime("-20 days")); */		 $this->datestart = "2013-04-12";  						}	function tblarticles(){  			$sql = "			SELECT id,title,event_date,type,n_status			FROM {$this->config['DATABASE_WEB']}.events			WHERE  			event_date >= '{$this->datestart}'			AND n_status = 1		 			";		$this->setSocketDB(0);		$qData = $this->fetch($sql,1);		$this->setSocketDB(3);		$datas['artilce list'] =   'no data';			if($qData){				$datas['artilce list'] =  array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.tbl_articles 				(`articlesid`, `names`, `type`, `dates`, `n_status`) 				VALUES ('{$data->id}', '{$data->title}', '{$data->type}', '{$data->event_date}', '{$data->n_status}')					ON DUPLICATE KEY UPDATE				names = VALUES(names),  				type = VALUES(type),  				dates = VALUES(dates),  				n_status = VALUES(n_status)				";				$this->query($sql);				$datas['artilce list'][] =  mysql_affected_rows(); 						}			}		print_r($datas);	} 	function tblauctions(){  			$sql = "			SELECT 				a.id,a.title,a.img,				a.start_date,a.end_date,a.minimalBid,a.n_status,				userbidder.totaluser,userbidder.uniqueuser,				higestbidders.names,higestbidders.points,higestbidders.userid			FROM {$this->config['DATABASE_WEB']}.auctions a			LEFT JOIN 			(				SELECT COUNT(userid) uniqueuser, SUM(manybids) totaluser, auctionid				FROM 				(					SELECT COUNT(manytimes) manybids ,auctionid, userid						FROM 						(							SELECT userid,auctionid,  manytimes							FROM {$this->config['DATABASE_WEB']}.bidding   							WHERE 							 DATE(bid_time) <= DATE(NOW())							GROUP BY auctionid,userid ,manytimes						) summarydata					GROUP BY auctionid,userid				) exactlydata				GROUP BY auctionid			) userbidder ON userbidder.auctionid = a.id			LEFT JOIN 			(				SELECT 					userid,auctionid,					CONCAT( sm.name,' ', sm.last_name) names , 					(COUNT(bid_badges)*bad.`point`) points				FROM {$this->config['DATABASE_WEB']}.bidding b				LEFT JOIN {$this->config['DATABASE_WEB']}.social_member sm ON  sm.id = b.userid				LEFT JOIN {$this->config['DATABASE_WEB']}.badges bad ON bad.id = b.bid_badges				WHERE 					b.n_status = 1					AND DATE(bid_time) <= DATE(NOW())				GROUP BY auctionid,userid ,bid_badges			) higestbidders  ON higestbidders.auctionid = a.id			WHERE 			a.end_date >= NOW()			a.n_status = 1		 			";		$this->setSocketDB(0);		$qData = $this->fetch($sql,1);		$this->setSocketDB(3);		$datas['auction list'] = 'no data';			if($qData){				$datas['auction list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO  {$this->config['DATABASE_REPORTS']}.tbl_auctions (  `auctionid`, `itemnames`, `higestpoint`, `userid`, `usernames`, `totaluser`, `uniqueuser`, `startdates`, `enddates`, `n_status`) 				VALUES ( '{$data->id}', '{$data->title}', '{$data->points}', '{$data->userid}', '{$data->names}', '{$data->totaluser}', '{$data->uniqueuser}', '{$data->start_date}', '{$data->end_date}', '{$data->n_status}') 				ON DUPLICATE KEY UPDATE				itemnames = VALUES(itemnames),  				higestpoint = VALUES(higestpoint),  				userid = VALUES(userid),  				usernames = VALUES(usernames),  				totaluser = VALUES(totaluser),  				uniqueuser = VALUES(uniqueuser),  				startdates = VALUES(startdates),  				enddates = VALUES(enddates),  				n_status = VALUES(n_status)				";				$this->query($sql);				$datas['auction list'][] =  mysql_affected_rows();						}		}		print_r($datas);	}			function tbluserauction(){		$sql = "			 			SELECT COUNT(manytimes) manybids ,auctionid, userid,bid_time, names				FROM 				(					SELECT 					userid,auctionid,  manytimes, 					MAX(DATE(bid_time)) bid_time,					CONCAT( sm.name,' ', sm.last_name) names					FROM {$this->config['DATABASE_WEB']}.bidding  b					LEFT JOIN {$this->config['DATABASE_WEB']}.social_member sm ON  sm.id = b.userid					WHERE 					DATE(bid_time) <= DATE(NOW())					GROUP BY auctionid,userid ,manytimes				) summarydata			GROUP BY auctionid 					";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user auction list'] =  'no data';		if($qData){			$datas['user auction list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO  {$this->config['DATABASE_REPORTS']}.`tbl_user_auction` 				(  `userid`, `auctionid`, `usernames`, `dates`, `manytimes`, `n_status`) 				VALUES ( '{$data->userid}', '{$data->auctionid}', '{$data->names}', '{$data->bid_time}', '{$data->manybids}', '1')		 				ON DUPLICATE KEY UPDATE				manytimes = VALUES(manytimes),  				dates = VALUES(dates) 				";				 				$this->query($sql);				$datas['user auction list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tblmerchandise(){		$sql = "			 			SELECT id,name,stock,postdate,enddates,n_status			FROM {$this->config['DATABASE_WEB']}.collectables 				 		";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['collectables list'] =  'no data';		if($qData){			$datas['collectables list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_merchandise` 				( `merchandiseid`, `names`, `max_stock`, `startdates`, `enddates`, `n_status`) 				VALUES 				( '{$data->id}', '{$data->name}', '{$data->stock}', '{$data->postdate}', '{$data->enddates}', '{$data->n_status}')			 	ON DUPLICATE KEY UPDATE				names = VALUES(names),  				max_stock = VALUES(max_stock),  				startdates = VALUES(startdates),  				enddates = VALUES(enddates) 				";				 				$this->query($sql);				$datas['collectables list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function  tblpagesacivity(){						$sql = "			 	 			SELECT 				l.sites,action_value,				spenttimes, totalclick clicks,				DATE(date_time) dates, n_status			FROM {$this->config['DATABASE_LOGS']}.tbl_activity_log l                        LEFT JOIN (                        	SELECT COUNT(1) totalclick,sites                                 FROM {$this->config['DATABASE_LOGS']}.tbl_activity_log lo                                WHERE action_id = 4								GROUP BY sites                                                        ) logs ON logs.sites = l.sites			WHERE action_id = 98 			AND DATE(date_time)>='{$this->datestart}' 		";				$this->setSocketDB(2);		$qData = $this->fetch($sql,1);		// print_r($sql);				$this->setSocketDB(3);		$datas['pages activity'] =  'no data';		if($qData){			$datas['pages activity'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_pages_acivity` 				( `url`, `pagesname`, `spents`, `clicks`, `dates`, `n_status`) 				VALUES 				( '{$data->sites}', '{$data->action_value}', '{$data->spenttimes}', '{$data->clicks}', '{$data->dates}', '{$data->n_status}') 			 	ON DUPLICATE KEY UPDATE				spents = VALUES(spents),  				clicks = VALUES(clicks) 				";				 				$this->query($sql);				$datas['pages activity'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tbluserdemographic(){		$sql = "			 			SELECT 			id userid,birthday,sex gender,			city,Brand1_ID brand_preference,usertype channel, register_date,			CONCAT(name,' ',last_name) names,img images,n_status verified ,YEAR(				CURRENT_TIMESTAMP ) - YEAR( birthday ) - ( RIGHT(				CURRENT_TIMESTAMP , 5 ) < RIGHT( birthday, 5 ) ) AS age					FROM {$this->config['DATABASE_WEB']}.social_member 				";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user demographic list'] =  'no data';		if($qData){								$datas['user demographic list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_demographic` 				(  `userid`, `age`, `gender`, `city`, `brand_preference`, `channel`, `register_date`, `names`, `images`, `verified`, `n_status`) 				VALUES 				( '{$data->userid}', '{$data->age}', '{$data->gender}', '{$data->city}', '{$data->brand_preference}', '{$data->channel}', '{$data->register_date}', '{$data->names}', '{$data->images}', '{$data->verified}', '1')			 	ON DUPLICATE KEY UPDATE				age = VALUES(age),  				gender = VALUES(gender),  				city = VALUES(city),  				brand_preference = VALUES(brand_preference),  				channel = VALUES(channel),  				register_date = VALUES(register_date),  				names = VALUES(names),  				images = VALUES(images),  				verified = VALUES(verified),  				n_status = VALUES(n_status) 				";				 				$this->query($sql);				$datas['user demographic list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tbluserbadges(){		$sql = "			 			SELECT 			b.userid,b.badgesid,b.codeid,b.redeem_date,			bc.code_channel,bc.code_sub_channel,b.n_status			FROM {$this->config['DATABASE_WEB']}.my_badges b			LEFT JOIN {$this->config['DATABASE_WEB']}.badges_code bc ON bc.id =b.codeid				";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user badges list'] =  'no data';		if($qData){								$datas['user badges list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_badges` 				( `userid`, `badgeid`, `codeid`, `dates`, `channel`, `subchannel`, `n_status`) 				VALUES 				( '{$data->userid}', '{$data->badgesid}', '{$data->codeid}', '{$data->redeem_date}', '{$data->code_channel}', '{$data->code_sub_channel}', '{$data->n_status}') 			 	ON DUPLICATE KEY UPDATE				badgeid = VALUES(badgeid),  				dates = VALUES(dates),  				channel = VALUES(channel),  				subchannel = VALUES(subchannel),  				channel = VALUES(channel),  				n_status = VALUES(n_status) 				";				 				$this->query($sql);				$datas['user badges list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tblbadges(){		$sql = "			 			SELECT 			b.badgesid ,DATE(b.redeem_date) dates,			bc.name,bc.image,bc.prob,b.n_status,			COUNT(1) totalredeem, uniqueredeem			FROM {$this->config['DATABASE_WEB']}.my_badges b			LEFT JOIN (				SELECT  badgesid, dates, count(1) uniqueredeem 					FROM					(						SELECT 									b.badgesid,b.userid,DATE(b.redeem_date) dates, count(1) totalredeems  						FROM {$this->config['DATABASE_WEB']}.my_badges b						GROUP BY userid,badgesid,dates					) bcd					GROUP BY badgesid,dates			) r ON r.badgesid = b.badgesid 			LEFT JOIN {$this->config['DATABASE_WEB']}.badges bc ON bc.id =b.badgesid			GROUP BY b.badgesid,dates					";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['badges list'] =  'no data';		if($qData){								$datas['badges list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_badges` 				(  `badgesid`, `names`, `prob`, `totalredeem`, `uniqueredeem`, `dates`, `images`, `n_status`) 				VALUES 				( '{$data->badgesid}', '{$data->name}', '{$data->prob}', '{$data->totalredeem}', '{$data->uniqueredeem}', '{$data->dates}', '{$data->image}', '{$data->n_status}') 			 	ON DUPLICATE KEY UPDATE   				names = VALUES(names),  				prob = VALUES(prob),  				totalredeem = VALUES(totalredeem),  				uniqueredeem = VALUES(uniqueredeem) 				";				 				$this->query($sql);				$datas['badges list'][] = mysql_affected_rows();						}			}			print_r($datas);		}			function tblusergames(){		$sql = "		 		";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user games list'] =  'no data';		if($qData){								$datas['user games list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_games` 				(`userid`, `gamesid`, `total`, `dates`, `n_status`) 				VALUES 				( '{$data->userid}', '{$data->gamesid}', '{$data->total}', '{$data->dates}', '{$data->n_status}')				 			 	ON DUPLICATE KEY UPDATE   				total = VALUES(total),  				n_status = VALUES(n_status) 				";				 				$this->query($sql);				$datas['user games list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tbluserlogin(){		$sql = "		 	 			SELECT 				COUNT(1) total, l.user_id userid ,				spenttimes, 				DATE(date_time) dates, n_status			FROM {$this->config['DATABASE_LOGS']}.tbl_activity_log l               			WHERE action_id = 1 			AND DATE(date_time)>='{$this->datestart}' 			GROUP BY dates,user_id		";				$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user games list'] =  'no data';		if($qData){								$datas['user games list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_login` 				( `userid`, `total`, `dates`, `spenttimes`, `n_status`) 				VALUES 				( '{$data->userid}', '{$data->total}', '{$data->dates}', '{$data->spenttimes}', '1')			 	ON DUPLICATE KEY UPDATE   				total = VALUES(total),  				spenttimes = VALUES(spenttimes) 				";				 				$this->query($sql);				$datas['user games list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tbluserreadarticle(){		$sql = "		 	 			SELECT 				 l.user_id userid ,action_value articleid,				DATE(date_time) dates, n_status			FROM {$this->config['DATABASE_LOGS']}.tbl_activity_log l               			WHERE action_id = 2 			AND DATE(date_time)>='{$this->datestart}' 			GROUP BY dates,user_id, articleid		";		// print_r($sql);		$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user games list'] =  'no data';		if($qData){								$datas['user games list'] = array();			foreach($qData as $data){				$sql = "				INSERT INTO  {$this->config['DATABASE_REPORTS']}.`tbl_user_read_articles` 				(  `userid`, `articleid`, `dates`, `n_status`) 				VALUES 				(  '{$data->userid}', '{$data->articleid}', '{$data->dates}', '1')				ON DUPLICATE KEY UPDATE   				n_status = VALUES(n_status) 				";				 				$this->query($sql);				$datas['user games list'][] = mysql_affected_rows();						}			}			print_r($datas);		}		function tbltradeuser(){		$sql = "		 	 			SELECT 				 l.creator userid ,offer offering, request requesting,				DATE(created_date) dates, n_status,1 requesting_total,COUNT(1) offering_total,id tradeid			FROM {$this->config['DATABASE_WEB']}.trades l 			WHERE  DATE(created_date)>='{$this->datestart}' 			GROUP BY tradeid		";		// print_r($sql);		$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user trade list'] =  'no data';		if($qData){								$datas['user trade list'] = array();			$newobjecttrading = array();			$n=0;			foreach($qData as $key => $data){				$offering = explode(',',$data->offering);				if(is_array($offering)){					$totaloffer = array();					foreach($offering as $badgesid){						$totaloffer[$badgesid][] =  $badgesid;					}										if($totaloffer){						foreach($totaloffer as $keys => $badgesarray ){														foreach($badgesarray as $vals ){								$data->offering				= $vals;  								$data->offering_total 		= count($badgesarray);						 								$newobjecttrading[$n]		= $data;								$n++;							}							 						}					}else{						$newobjecttrading[$n]			= $data;						$n++;					}				}else{						$newobjecttrading[$n] 		= $data;						$n++;				}			}				// print_r($newobjecttrading);exit;			if($newobjecttrading){				foreach($newobjecttrading as $data){									$sql = "					INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_trading` 					(`id`, `userid`, `offering`, `requesting`, `tradeid`, `offering_total`, `requesting_total`, `dates`, `n_status`) 					VALUES 					(NULL, '{$data->userid}', '{$data->offering}', '{$data->requesting}', '{$data->tradeid}', '{$data->offering_total}', '{$data->requesting_total}', '{$data->dates}', '{$data->n_status}') 					ON DUPLICATE KEY UPDATE   					n_status = VALUES(n_status) ,					offering_total = VALUES(offering_total) 					";					 					$this->query($sql);					$datas['user trade list'][] = mysql_affected_rows();				}			}					}			print_r($datas);		}		function tbluserredeem(){		$sql = "		 	 			SELECT 				 l.userid ,merchandiseid, date_redeemed dates, n_status 			FROM {$this->config['DATABASE_WEB']}.my_collectables l 			WHERE  DATE(date_redeemed)>='{$this->datestart}' 			GROUP BY userid		";		// print_r($sql);		$this->setSocketDB(0);		$qData = $this->fetch($sql,1);	 		$this->setSocketDB(3);		$datas['user redeem list'] =  'no data';		if($qData){		  $datas['user redeem list'] = array();				foreach($qData as $data){									$sql = "					INSERT INTO {$this->config['DATABASE_REPORTS']}.`tbl_user_redeem` 					( 	userid ,	merchandiseid, 	dates ,	n_status ) 					VALUES 					( '{$data->userid}', '{$data->merchandiseid}', '{$data->dates}', '{$data->n_status}' ) 					ON DUPLICATE KEY UPDATE   					n_status = VALUES(n_status) 					";					 					$this->query($sql);					$datas['user redeem list'][] = mysql_affected_rows();				}			 		}			print_r($datas);		}	}$class = new dashboardbot;print "<pre>";$class->tblarticles();$class->tblauctions();$class->tbluserauction();$class->tblmerchandise();$class->tblpagesacivity();$class->tbluserdemographic();$class->tbluserbadges();$class->tblbadges();$class->tbluserlogin();$class->tbluserreadarticle();$class->tbltradeuser();$class->tbluserredeem();print "</pre>";die();?>